{"version":3,"sources":["classes/filter.js","utils/index.js","data.js","classes/renderer.js","app.js"],"names":["data","state","slice","name","filter","datum","toLowerCase","indexOf","fn","timeout","currentTimeout","args","clearTimeout","setTimeout","apply","code","Filter","countries","map","country","app","document","querySelector","filterInput","countryData","getData","filterCountries","bind","addEventListener","ev","text","target","value","filterDataBy","render","fragment","DocumentFragment","uList","createElement","forEach","listItem","textContent","append","firstChild","remove","window","Renderer"],"mappings":"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","file":"app.1f070df9.js","sourceRoot":"..","sourcesContent":["'use strict';\r\n\r\nexport default class {\r\n  constructor(data) {\r\n    this.state = {\r\n      data: data.slice()\r\n    }\r\n  }\r\n\r\n  getData() {\r\n    return this.state.data;\r\n  }\r\n\r\n  filterDataBy(name) {\r\n    return this.state.data.filter(datum => datum.toLowerCase().indexOf(name.toLowerCase()) === 0);\r\n  }\r\n}","'use strict';\r\n\r\nexport default (fn, timeout) => {\r\n  let currentTimeout;\r\n\r\n  return function(...args) {\r\n    clearTimeout(currentTimeout);\r\n    currentTimeout = setTimeout(() => fn.apply(this, args), timeout)\r\n  }\r\n}","export default [ \r\n  {name: 'Afghanistan', code: 'AF'}, \r\n  {name: 'Åland Islands', code: 'AX'}, \r\n  {name: 'Albania', code: 'AL'}, \r\n  {name: 'Algeria', code: 'DZ'}, \r\n  {name: 'American Samoa', code: 'AS'}, \r\n  {name: 'AndorrA', code: 'AD'}, \r\n  {name: 'Angola', code: 'AO'}, \r\n  {name: 'Anguilla', code: 'AI'}, \r\n  {name: 'Antarctica', code: 'AQ'}, \r\n  {name: 'Antigua and Barbuda', code: 'AG'}, \r\n  {name: 'Argentina', code: 'AR'}, \r\n  {name: 'Armenia', code: 'AM'}, \r\n  {name: 'Aruba', code: 'AW'}, \r\n  {name: 'Australia', code: 'AU'}, \r\n  {name: 'Austria', code: 'AT'}, \r\n  {name: 'Azerbaijan', code: 'AZ'}, \r\n  {name: 'Bahamas', code: 'BS'}, \r\n  {name: 'Bahrain', code: 'BH'}, \r\n  {name: 'Bangladesh', code: 'BD'}, \r\n  {name: 'Barbados', code: 'BB'}, \r\n  {name: 'Belarus', code: 'BY'}, \r\n  {name: 'Belgium', code: 'BE'}, \r\n  {name: 'Belize', code: 'BZ'}, \r\n  {name: 'Benin', code: 'BJ'}, \r\n  {name: 'Bermuda', code: 'BM'}, \r\n  {name: 'Bhutan', code: 'BT'}, \r\n  {name: 'Bolivia', code: 'BO'}, \r\n  {name: 'Bosnia and Herzegovina', code: 'BA'}, \r\n  {name: 'Botswana', code: 'BW'}, \r\n  {name: 'Bouvet Island', code: 'BV'}, \r\n  {name: 'Brazil', code: 'BR'}, \r\n  {name: 'British Indian Ocean Territory', code: 'IO'}, \r\n  {name: 'Brunei Darussalam', code: 'BN'}, \r\n  {name: 'Bulgaria', code: 'BG'}, \r\n  {name: 'Burkina Faso', code: 'BF'}, \r\n  {name: 'Burundi', code: 'BI'}, \r\n  {name: 'Cambodia', code: 'KH'}, \r\n  {name: 'Cameroon', code: 'CM'}, \r\n  {name: 'Canada', code: 'CA'}, \r\n  {name: 'Cape Verde', code: 'CV'}, \r\n  {name: 'Cayman Islands', code: 'KY'}, \r\n  {name: 'Central African Republic', code: 'CF'}, \r\n  {name: 'Chad', code: 'TD'}, \r\n  {name: 'Chile', code: 'CL'}, \r\n  {name: 'China', code: 'CN'}, \r\n  {name: 'Christmas Island', code: 'CX'}, \r\n  {name: 'Cocos (Keeling) Islands', code: 'CC'}, \r\n  {name: 'Colombia', code: 'CO'}, \r\n  {name: 'Comoros', code: 'KM'}, \r\n  {name: 'Congo', code: 'CG'}, \r\n  {name: 'Congo, The Democratic Republic of the', code: 'CD'}, \r\n  {name: 'Cook Islands', code: 'CK'}, \r\n  {name: 'Costa Rica', code: 'CR'}, \r\n  {name: 'Cote D\\'Ivoire', code: 'CI'}, \r\n  {name: 'Croatia', code: 'HR'}, \r\n  {name: 'Cuba', code: 'CU'}, \r\n  {name: 'Cyprus', code: 'CY'}, \r\n  {name: 'Czech Republic', code: 'CZ'}, \r\n  {name: 'Denmark', code: 'DK'}, \r\n  {name: 'Djibouti', code: 'DJ'}, \r\n  {name: 'Dominica', code: 'DM'}, \r\n  {name: 'Dominican Republic', code: 'DO'}, \r\n  {name: 'Ecuador', code: 'EC'}, \r\n  {name: 'Egypt', code: 'EG'}, \r\n  {name: 'El Salvador', code: 'SV'}, \r\n  {name: 'Equatorial Guinea', code: 'GQ'}, \r\n  {name: 'Eritrea', code: 'ER'}, \r\n  {name: 'Estonia', code: 'EE'}, \r\n  {name: 'Ethiopia', code: 'ET'}, \r\n  {name: 'Falkland Islands (Malvinas)', code: 'FK'}, \r\n  {name: 'Faroe Islands', code: 'FO'}, \r\n  {name: 'Fiji', code: 'FJ'}, \r\n  {name: 'Finland', code: 'FI'}, \r\n  {name: 'France', code: 'FR'}, \r\n  {name: 'French Guiana', code: 'GF'}, \r\n  {name: 'French Polynesia', code: 'PF'}, \r\n  {name: 'French Southern Territories', code: 'TF'}, \r\n  {name: 'Gabon', code: 'GA'}, \r\n  {name: 'Gambia', code: 'GM'}, \r\n  {name: 'Georgia', code: 'GE'}, \r\n  {name: 'Germany', code: 'DE'}, \r\n  {name: 'Ghana', code: 'GH'}, \r\n  {name: 'Gibraltar', code: 'GI'}, \r\n  {name: 'Greece', code: 'GR'}, \r\n  {name: 'Greenland', code: 'GL'}, \r\n  {name: 'Grenada', code: 'GD'}, \r\n  {name: 'Guadeloupe', code: 'GP'}, \r\n  {name: 'Guam', code: 'GU'}, \r\n  {name: 'Guatemala', code: 'GT'}, \r\n  {name: 'Guernsey', code: 'GG'}, \r\n  {name: 'Guinea', code: 'GN'}, \r\n  {name: 'Guinea-Bissau', code: 'GW'}, \r\n  {name: 'Guyana', code: 'GY'}, \r\n  {name: 'Haiti', code: 'HT'}, \r\n  {name: 'Heard Island and Mcdonald Islands', code: 'HM'}, \r\n  {name: 'Holy See (Vatican City State)', code: 'VA'}, \r\n  {name: 'Honduras', code: 'HN'}, \r\n  {name: 'Hong Kong', code: 'HK'}, \r\n  {name: 'Hungary', code: 'HU'}, \r\n  {name: 'Iceland', code: 'IS'}, \r\n  {name: 'India', code: 'IN'}, \r\n  {name: 'Indonesia', code: 'ID'}, \r\n  {name: 'Iran, Islamic Republic Of', code: 'IR'}, \r\n  {name: 'Iraq', code: 'IQ'}, \r\n  {name: 'Ireland', code: 'IE'}, \r\n  {name: 'Isle of Man', code: 'IM'}, \r\n  {name: 'Israel', code: 'IL'}, \r\n  {name: 'Italy', code: 'IT'}, \r\n  {name: 'Jamaica', code: 'JM'}, \r\n  {name: 'Japan', code: 'JP'}, \r\n  {name: 'Jersey', code: 'JE'}, \r\n  {name: 'Jordan', code: 'JO'}, \r\n  {name: 'Kazakhstan', code: 'KZ'}, \r\n  {name: 'Kenya', code: 'KE'}, \r\n  {name: 'Kiribati', code: 'KI'}, \r\n  {name: 'Korea, Democratic People\\'S Republic of', code: 'KP'}, \r\n  {name: 'Korea, Republic of', code: 'KR'}, \r\n  {name: 'Kuwait', code: 'KW'}, \r\n  {name: 'Kyrgyzstan', code: 'KG'}, \r\n  {name: 'Lao People\\'S Democratic Republic', code: 'LA'}, \r\n  {name: 'Latvia', code: 'LV'}, \r\n  {name: 'Lebanon', code: 'LB'}, \r\n  {name: 'Lesotho', code: 'LS'}, \r\n  {name: 'Liberia', code: 'LR'}, \r\n  {name: 'Libyan Arab Jamahiriya', code: 'LY'}, \r\n  {name: 'Liechtenstein', code: 'LI'}, \r\n  {name: 'Lithuania', code: 'LT'}, \r\n  {name: 'Luxembourg', code: 'LU'}, \r\n  {name: 'Macao', code: 'MO'}, \r\n  {name: 'Macedonia, The Former Yugoslav Republic of', code: 'MK'}, \r\n  {name: 'Madagascar', code: 'MG'}, \r\n  {name: 'Malawi', code: 'MW'}, \r\n  {name: 'Malaysia', code: 'MY'}, \r\n  {name: 'Maldives', code: 'MV'}, \r\n  {name: 'Mali', code: 'ML'}, \r\n  {name: 'Malta', code: 'MT'}, \r\n  {name: 'Marshall Islands', code: 'MH'}, \r\n  {name: 'Martinique', code: 'MQ'}, \r\n  {name: 'Mauritania', code: 'MR'}, \r\n  {name: 'Mauritius', code: 'MU'}, \r\n  {name: 'Mayotte', code: 'YT'}, \r\n  {name: 'Mexico', code: 'MX'}, \r\n  {name: 'Micronesia, Federated States of', code: 'FM'}, \r\n  {name: 'Moldova, Republic of', code: 'MD'}, \r\n  {name: 'Monaco', code: 'MC'}, \r\n  {name: 'Mongolia', code: 'MN'}, \r\n  {name: 'Montserrat', code: 'MS'}, \r\n  {name: 'Morocco', code: 'MA'}, \r\n  {name: 'Mozambique', code: 'MZ'}, \r\n  {name: 'Myanmar', code: 'MM'}, \r\n  {name: 'Namibia', code: 'NA'}, \r\n  {name: 'Nauru', code: 'NR'}, \r\n  {name: 'Nepal', code: 'NP'}, \r\n  {name: 'Netherlands', code: 'NL'}, \r\n  {name: 'Netherlands Antilles', code: 'AN'}, \r\n  {name: 'New Caledonia', code: 'NC'}, \r\n  {name: 'New Zealand', code: 'NZ'}, \r\n  {name: 'Nicaragua', code: 'NI'}, \r\n  {name: 'Niger', code: 'NE'}, \r\n  {name: 'Nigeria', code: 'NG'}, \r\n  {name: 'Niue', code: 'NU'}, \r\n  {name: 'Norfolk Island', code: 'NF'}, \r\n  {name: 'Northern Mariana Islands', code: 'MP'}, \r\n  {name: 'Norway', code: 'NO'}, \r\n  {name: 'Oman', code: 'OM'}, \r\n  {name: 'Pakistan', code: 'PK'}, \r\n  {name: 'Palau', code: 'PW'}, \r\n  {name: 'Palestinian Territory, Occupied', code: 'PS'}, \r\n  {name: 'Panama', code: 'PA'}, \r\n  {name: 'Papua New Guinea', code: 'PG'}, \r\n  {name: 'Paraguay', code: 'PY'}, \r\n  {name: 'Peru', code: 'PE'}, \r\n  {name: 'Philippines', code: 'PH'}, \r\n  {name: 'Pitcairn', code: 'PN'}, \r\n  {name: 'Poland', code: 'PL'}, \r\n  {name: 'Portugal', code: 'PT'}, \r\n  {name: 'Puerto Rico', code: 'PR'}, \r\n  {name: 'Qatar', code: 'QA'}, \r\n  {name: 'Reunion', code: 'RE'}, \r\n  {name: 'Romania', code: 'RO'}, \r\n  {name: 'Russian Federation', code: 'RU'}, \r\n  {name: 'RWANDA', code: 'RW'}, \r\n  {name: 'Saint Helena', code: 'SH'}, \r\n  {name: 'Saint Kitts and Nevis', code: 'KN'}, \r\n  {name: 'Saint Lucia', code: 'LC'}, \r\n  {name: 'Saint Pierre and Miquelon', code: 'PM'}, \r\n  {name: 'Saint Vincent and the Grenadines', code: 'VC'}, \r\n  {name: 'Samoa', code: 'WS'}, \r\n  {name: 'San Marino', code: 'SM'}, \r\n  {name: 'Sao Tome and Principe', code: 'ST'}, \r\n  {name: 'Saudi Arabia', code: 'SA'}, \r\n  {name: 'Senegal', code: 'SN'}, \r\n  {name: 'Serbia and Montenegro', code: 'CS'}, \r\n  {name: 'Seychelles', code: 'SC'}, \r\n  {name: 'Sierra Leone', code: 'SL'}, \r\n  {name: 'Singapore', code: 'SG'}, \r\n  {name: 'Slovakia', code: 'SK'}, \r\n  {name: 'Slovenia', code: 'SI'}, \r\n  {name: 'Solomon Islands', code: 'SB'}, \r\n  {name: 'Somalia', code: 'SO'}, \r\n  {name: 'South Africa', code: 'ZA'}, \r\n  {name: 'South Georgia and the South Sandwich Islands', code: 'GS'}, \r\n  {name: 'Spain', code: 'ES'}, \r\n  {name: 'Sri Lanka', code: 'LK'}, \r\n  {name: 'Sudan', code: 'SD'}, \r\n  {name: 'Suriname', code: 'SR'}, \r\n  {name: 'Svalbard and Jan Mayen', code: 'SJ'}, \r\n  {name: 'Swaziland', code: 'SZ'}, \r\n  {name: 'Sweden', code: 'SE'}, \r\n  {name: 'Switzerland', code: 'CH'}, \r\n  {name: 'Syrian Arab Republic', code: 'SY'}, \r\n  {name: 'Taiwan, Province of China', code: 'TW'}, \r\n  {name: 'Tajikistan', code: 'TJ'}, \r\n  {name: 'Tanzania, United Republic of', code: 'TZ'}, \r\n  {name: 'Thailand', code: 'TH'}, \r\n  {name: 'Timor-Leste', code: 'TL'}, \r\n  {name: 'Togo', code: 'TG'}, \r\n  {name: 'Tokelau', code: 'TK'}, \r\n  {name: 'Tonga', code: 'TO'}, \r\n  {name: 'Trinidad and Tobago', code: 'TT'}, \r\n  {name: 'Tunisia', code: 'TN'}, \r\n  {name: 'Turkey', code: 'TR'}, \r\n  {name: 'Turkmenistan', code: 'TM'}, \r\n  {name: 'Turks and Caicos Islands', code: 'TC'}, \r\n  {name: 'Tuvalu', code: 'TV'}, \r\n  {name: 'Uganda', code: 'UG'}, \r\n  {name: 'Ukraine', code: 'UA'}, \r\n  {name: 'United Arab Emirates', code: 'AE'}, \r\n  {name: 'United Kingdom', code: 'GB'}, \r\n  {name: 'United States', code: 'US'}, \r\n  {name: 'United States Minor Outlying Islands', code: 'UM'}, \r\n  {name: 'Uruguay', code: 'UY'}, \r\n  {name: 'Uzbekistan', code: 'UZ'}, \r\n  {name: 'Vanuatu', code: 'VU'}, \r\n  {name: 'Venezuela', code: 'VE'}, \r\n  {name: 'Viet Nam', code: 'VN'}, \r\n  {name: 'Virgin Islands, British', code: 'VG'}, \r\n  {name: 'Virgin Islands, U.S.', code: 'VI'}, \r\n  {name: 'Wallis and Futuna', code: 'WF'}, \r\n  {name: 'Western Sahara', code: 'EH'}, \r\n  {name: 'Yemen', code: 'YE'}, \r\n  {name: 'Zambia', code: 'ZM'}, \r\n  {name: 'Zimbabwe', code: 'ZW'} \r\n]","'use strict';\r\n\r\nimport Filter from './filter.js';\r\nimport debounce from '../utils/index.js';\r\nimport countries from '../data.js'\r\n\r\nexport default class {\r\n  constructor() {\r\n    this.filter = new Filter(countries.map(country => country.name));\r\n\r\n    this.app = document.querySelector('#app');\r\n    this.filterInput = document.querySelector(\"#filter-input\");\r\n    this.countryData = this.filter.getData();\r\n\r\n    this.filterCountries = this.filterCountries.bind(this);\r\n    this.filterInput.addEventListener('input', debounce(this.filterCountries, 200));\r\n  }\r\n\r\n  filterCountries(ev) {\r\n    const text = ev.target.value.toLowerCase();\r\n    if(!!text) {\r\n      this.countryData = this.filter.filterDataBy(text);\r\n    } else {\r\n      this.countryData = this.filter.getData();\r\n    }\r\n    this.render();\r\n  }\r\n\r\n\r\n  render() {\r\n    const fragment = new DocumentFragment();\r\n    const uList = document.createElement('ul');\r\n\r\n    this.countryData.forEach(country => {\r\n      const listItem = document.createElement('li');\r\n      listItem.textContent = country;\r\n      uList.append(listItem);\r\n    });\r\n\r\n    fragment.append(uList);\r\n\r\n    while(this.app.firstChild) {\r\n      this.app.firstChild.remove();\r\n    }\r\n\r\n\r\n    this.app.append(fragment);\r\n  }\r\n}\r\n","import Renderer from './classes/renderer.js'\r\n\r\nwindow.addEventListener('load', () => {\r\nconst renderer = new Renderer();\r\nrenderer.render();\r\n})\r\n"]}